"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/study-plan/page",{

/***/ "(app-pages-browser)/./lib/study-plan-data.ts":
/*!********************************!*\
  !*** ./lib/study-plan-data.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FOCUS_AREAS: () => (/* binding */ FOCUS_AREAS),\n/* harmony export */   MONTHLY_PROGRESS: () => (/* binding */ MONTHLY_PROGRESS),\n/* harmony export */   PROGRESS: () => (/* binding */ PROGRESS),\n/* harmony export */   SESSIONS: () => (/* binding */ SESSIONS),\n/* harmony export */   STUDY_EFFICIENCY: () => (/* binding */ STUDY_EFFICIENCY),\n/* harmony export */   STUDY_PLANS: () => (/* binding */ STUDY_PLANS),\n/* harmony export */   STUDY_TIME_DISTRIBUTION: () => (/* binding */ STUDY_TIME_DISTRIBUTION),\n/* harmony export */   SUBJECT_PROGRESS: () => (/* binding */ SUBJECT_PROGRESS),\n/* harmony export */   TASKS: () => (/* binding */ TASKS),\n/* harmony export */   TASK_COMPLETION_RATE: () => (/* binding */ TASK_COMPLETION_RATE),\n/* harmony export */   WEEKLY_GOALS: () => (/* binding */ WEEKLY_GOALS),\n/* harmony export */   WEEKLY_STUDY_DATA: () => (/* binding */ WEEKLY_STUDY_DATA),\n/* harmony export */   daysFromNow: () => (/* binding */ daysFromNow),\n/* harmony export */   formatDate: () => (/* binding */ formatDate),\n/* harmony export */   formatRelativeTime: () => (/* binding */ formatRelativeTime),\n/* harmony export */   formatTime: () => (/* binding */ formatTime),\n/* harmony export */   generateId: () => (/* binding */ generateId),\n/* harmony export */   getCompletedTasks: () => (/* binding */ getCompletedTasks),\n/* harmony export */   getTodaysSessions: () => (/* binding */ getTodaysSessions),\n/* harmony export */   getTodaysTasks: () => (/* binding */ getTodaysTasks),\n/* harmony export */   getUpcomingTasks: () => (/* binding */ getUpcomingTasks),\n/* harmony export */   hoursFromNow: () => (/* binding */ hoursFromNow),\n/* harmony export */   timeToday: () => (/* binding */ timeToday)\n/* harmony export */ });\n// Types\n// Helper function to generate IDs\nfunction generateId() {\n    return Math.random().toString(36).substring(2, 15);\n}\n// Helper function to get date X days ago or in the future\nfunction daysFromNow(days) {\n    const date = new Date();\n    date.setDate(date.getDate() + days);\n    return date;\n}\n// Helper to create dates relative to now\nconst hoursFromNow = (hours)=>{\n    const date = new Date();\n    date.setHours(date.getHours() + hours);\n    return date;\n};\n// Helper to create times for today\nconst timeToday = function(hours) {\n    let minutes = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n    const date = new Date();\n    date.setHours(hours, minutes, 0, 0);\n    return date;\n};\n// Current user ID (mock)\nconst CURRENT_USER_ID = \"user_1\";\n// Mock tasks with more data\nconst TASKS = [\n    // Tasks due today\n    {\n        id: \"task_1\",\n        title: \"Study Algorithms\",\n        description: \"Review quicksort, mergesort, and heapsort algorithms for the upcoming exam.\",\n        dueDate: daysFromNow(0),\n        status: \"in_progress\",\n        priority: \"high\",\n        userId: CURRENT_USER_ID,\n        createdAt: daysFromNow(-10),\n        updatedAt: daysFromNow(-5),\n        tags: [\n            \"algorithms\",\n            \"computer science\",\n            \"exam prep\"\n        ],\n        subjectArea: \"Computer Science\",\n        estimatedTime: 120\n    },\n    {\n        id: \"task_2\",\n        title: \"Physics Lab Report\",\n        description: \"Complete the lab report on wave interference patterns and submit it online.\",\n        dueDate: daysFromNow(0),\n        status: \"not_started\",\n        priority: \"medium\",\n        userId: CURRENT_USER_ID,\n        createdAt: daysFromNow(-8),\n        updatedAt: daysFromNow(-8),\n        tags: [\n            \"physics\",\n            \"lab report\",\n            \"waves\"\n        ],\n        subjectArea: \"Physics\",\n        estimatedTime: 90\n    },\n    {\n        id: \"task_3\",\n        title: \"Mathematics Problem Set\",\n        description: \"Solve the calculus problem set from Chapter 7 on integration techniques.\",\n        dueDate: daysFromNow(0),\n        status: \"not_started\",\n        priority: \"high\",\n        userId: CURRENT_USER_ID,\n        createdAt: daysFromNow(-7),\n        updatedAt: daysFromNow(-7),\n        tags: [\n            \"mathematics\",\n            \"calculus\",\n            \"integration\"\n        ],\n        subjectArea: \"Mathematics\",\n        estimatedTime: 60\n    },\n    // Upcoming tasks\n    {\n        id: \"task_4\",\n        title: \"Read Research Paper\",\n        description: \"Read and summarize the research paper on quantum computing applications in cryptography.\",\n        dueDate: daysFromNow(2),\n        status: \"not_started\",\n        priority: \"low\",\n        userId: CURRENT_USER_ID,\n        createdAt: daysFromNow(-6),\n        updatedAt: daysFromNow(-6),\n        tags: [\n            \"quantum computing\",\n            \"research\",\n            \"cryptography\"\n        ],\n        subjectArea: \"Computer Science\",\n        estimatedTime: 120\n    },\n    {\n        id: \"task_5\",\n        title: \"Chemistry Experiment\",\n        description: \"Prepare for the titration experiment and review the procedure beforehand.\",\n        dueDate: daysFromNow(3),\n        status: \"not_started\",\n        priority: \"medium\",\n        userId: CURRENT_USER_ID,\n        createdAt: daysFromNow(-5),\n        updatedAt: daysFromNow(-5),\n        tags: [\n            \"chemistry\",\n            \"experiment\",\n            \"titration\"\n        ],\n        subjectArea: \"Chemistry\",\n        estimatedTime: 45\n    },\n    {\n        id: \"task_6\",\n        title: \"Literature Essay\",\n        description: \"Write a 1500-word essay analyzing the themes in 'To Kill a Mockingbird'.\",\n        dueDate: daysFromNow(5),\n        status: \"not_started\",\n        priority: \"high\",\n        userId: CURRENT_USER_ID,\n        createdAt: daysFromNow(-4),\n        updatedAt: daysFromNow(-4),\n        tags: [\n            \"literature\",\n            \"essay\",\n            \"analysis\"\n        ],\n        subjectArea: \"Literature\",\n        estimatedTime: 180\n    },\n    // Completed tasks\n    {\n        id: \"task_7\",\n        title: \"Programming Assignment\",\n        description: \"Implement a binary search tree in Python with insert, delete, and traversal methods.\",\n        dueDate: daysFromNow(-3),\n        status: \"completed\",\n        priority: \"medium\",\n        userId: CURRENT_USER_ID,\n        createdAt: daysFromNow(-15),\n        updatedAt: daysFromNow(-2),\n        tags: [\n            \"programming\",\n            \"data structures\",\n            \"python\"\n        ],\n        subjectArea: \"Computer Science\",\n        completedAt: daysFromNow(-2),\n        estimatedTime: 150\n    },\n    {\n        id: \"task_8\",\n        title: \"Biology Quiz Preparation\",\n        description: \"Study cell biology and molecular mechanisms for tomorrow's quiz.\",\n        dueDate: daysFromNow(-1),\n        status: \"completed\",\n        priority: \"high\",\n        userId: CURRENT_USER_ID,\n        createdAt: daysFromNow(-7),\n        updatedAt: daysFromNow(-1),\n        tags: [\n            \"biology\",\n            \"quiz\",\n            \"cell biology\"\n        ],\n        subjectArea: \"Biology\",\n        completedAt: daysFromNow(-1),\n        estimatedTime: 120\n    },\n    {\n        id: \"task_9\",\n        title: \"History Timeline\",\n        description: \"Create a timeline of major events during the Industrial Revolution.\",\n        dueDate: daysFromNow(-2),\n        status: \"completed\",\n        priority: \"medium\",\n        userId: CURRENT_USER_ID,\n        createdAt: daysFromNow(-10),\n        updatedAt: daysFromNow(-2),\n        tags: [\n            \"history\",\n            \"industrial revolution\",\n            \"timeline\"\n        ],\n        subjectArea: \"History\",\n        completedAt: daysFromNow(-2),\n        estimatedTime: 90\n    },\n    {\n        id: \"task_10\",\n        title: \"Physics Problem Set\",\n        description: \"Complete the mechanics problem set focusing on Newton's laws of motion.\",\n        dueDate: daysFromNow(-4),\n        status: \"completed\",\n        priority: \"medium\",\n        userId: CURRENT_USER_ID,\n        createdAt: daysFromNow(-12),\n        updatedAt: daysFromNow(-4),\n        tags: [\n            \"physics\",\n            \"mechanics\",\n            \"newton's laws\"\n        ],\n        subjectArea: \"Physics\",\n        completedAt: daysFromNow(-4),\n        estimatedTime: 60\n    }\n];\n// Get tasks for today\nconst getTodaysTasks = ()=>{\n    const today = new Date();\n    return TASKS.filter((task)=>{\n        const taskDate = new Date(task.dueDate);\n        return taskDate.getDate() === today.getDate() && taskDate.getMonth() === today.getMonth() && taskDate.getFullYear() === today.getFullYear() && task.status !== \"completed\";\n    });\n};\n// Get completed tasks\nconst getCompletedTasks = ()=>{\n    return TASKS.filter((task)=>task.status === \"completed\");\n};\n// Get upcoming tasks (not due today and not completed)\nconst getUpcomingTasks = ()=>{\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return TASKS.filter((task)=>{\n        const taskDate = new Date(task.dueDate);\n        taskDate.setHours(0, 0, 0, 0);\n        return taskDate > today && task.status !== \"completed\";\n    });\n};\n// Mock study sessions with more data for today\nconst SESSIONS = [\n    // Today's sessions\n    {\n        id: \"session_1\",\n        userId: CURRENT_USER_ID,\n        taskId: \"task_1\",\n        task: TASKS.find((t)=>t.id === \"task_1\"),\n        startTime: timeToday(9, 0),\n        endTime: timeToday(11, 0),\n        duration: 120,\n        goal: \"Complete review of sorting algorithms and implement examples\",\n        notes: \"Focus on time complexity analysis and optimization techniques\",\n        createdAt: daysFromNow(-1),\n        updatedAt: daysFromNow(-1),\n        completed: false\n    },\n    {\n        id: \"session_2\",\n        userId: CURRENT_USER_ID,\n        taskId: \"task_2\",\n        task: TASKS.find((t)=>t.id === \"task_2\"),\n        startTime: timeToday(13, 0),\n        endTime: timeToday(14, 30),\n        duration: 90,\n        goal: \"Write the physics lab report introduction and methodology sections\",\n        notes: \"Include diagrams and experimental setup details\",\n        createdAt: daysFromNow(-1),\n        updatedAt: daysFromNow(-1),\n        completed: false\n    },\n    {\n        id: \"session_3\",\n        userId: CURRENT_USER_ID,\n        taskId: \"task_3\",\n        task: TASKS.find((t)=>t.id === \"task_3\"),\n        startTime: timeToday(16, 0),\n        endTime: timeToday(17, 0),\n        duration: 60,\n        goal: \"Solve calculus integration problems from Chapter 7\",\n        notes: \"Focus on integration by parts and substitution methods\",\n        createdAt: daysFromNow(-1),\n        updatedAt: daysFromNow(-1),\n        completed: false\n    },\n    // Past sessions\n    {\n        id: \"session_4\",\n        userId: CURRENT_USER_ID,\n        taskId: \"task_7\",\n        task: TASKS.find((t)=>t.id === \"task_7\"),\n        startTime: daysFromNow(-3),\n        endTime: new Date(daysFromNow(-3).getTime() + 2.5 * 60 * 60 * 1000),\n        duration: 150,\n        goal: \"Implement binary search tree in Python\",\n        notes: \"Completed implementation of insert, delete, and traversal methods. Need to add balancing in the future.\",\n        createdAt: daysFromNow(-4),\n        updatedAt: daysFromNow(-3),\n        completed: true\n    },\n    {\n        id: \"session_5\",\n        userId: CURRENT_USER_ID,\n        taskId: \"task_8\",\n        task: TASKS.find((t)=>t.id === \"task_8\"),\n        startTime: daysFromNow(-2),\n        endTime: new Date(daysFromNow(-2).getTime() + 2 * 60 * 60 * 1000),\n        duration: 120,\n        goal: \"Study cell biology for quiz\",\n        notes: \"Reviewed cell structure, organelles, and cellular respiration. Created flashcards for key concepts.\",\n        createdAt: daysFromNow(-3),\n        updatedAt: daysFromNow(-2),\n        completed: true\n    },\n    {\n        id: \"session_6\",\n        userId: CURRENT_USER_ID,\n        taskId: \"task_9\",\n        task: TASKS.find((t)=>t.id === \"task_9\"),\n        startTime: daysFromNow(-3),\n        endTime: new Date(daysFromNow(-3).getTime() + 1.5 * 60 * 60 * 1000),\n        duration: 90,\n        goal: \"Create Industrial Revolution timeline\",\n        notes: \"Researched key events and innovations. Created digital timeline with images and descriptions.\",\n        createdAt: daysFromNow(-4),\n        updatedAt: daysFromNow(-3),\n        completed: true\n    }\n];\n// Get sessions for today\nconst getTodaysSessions = ()=>{\n    const today = new Date();\n    return SESSIONS.filter((session)=>{\n        return session.startTime.getDate() === today.getDate() && session.startTime.getMonth() === today.getMonth() && session.startTime.getFullYear() === today.getFullYear();\n    });\n};\n// Mock progress data\nconst PROGRESS = [\n    {\n        id: \"progress_1\",\n        userId: CURRENT_USER_ID,\n        category: \"Algorithms\",\n        score: 85,\n        maxScore: 100,\n        completedAt: daysFromNow(-20),\n        createdAt: daysFromNow(-20),\n        updatedAt: daysFromNow(-20)\n    },\n    {\n        id: \"progress_2\",\n        userId: CURRENT_USER_ID,\n        category: \"Data Structures\",\n        score: 92,\n        maxScore: 100,\n        completedAt: daysFromNow(-15),\n        createdAt: daysFromNow(-15),\n        updatedAt: daysFromNow(-15)\n    },\n    {\n        id: \"progress_3\",\n        userId: CURRENT_USER_ID,\n        category: \"Calculus\",\n        score: 78,\n        maxScore: 100,\n        completedAt: daysFromNow(-10),\n        createdAt: daysFromNow(-10),\n        updatedAt: daysFromNow(-10)\n    },\n    {\n        id: \"progress_4\",\n        userId: CURRENT_USER_ID,\n        category: \"Quantum Physics\",\n        score: 65,\n        maxScore: 100,\n        completedAt: daysFromNow(-5),\n        createdAt: daysFromNow(-5),\n        updatedAt: daysFromNow(-5)\n    },\n    {\n        id: \"progress_5\",\n        userId: CURRENT_USER_ID,\n        category: \"Organic Chemistry\",\n        score: 88,\n        maxScore: 100,\n        completedAt: daysFromNow(-8),\n        createdAt: daysFromNow(-8),\n        updatedAt: daysFromNow(-8)\n    },\n    {\n        id: \"progress_6\",\n        userId: CURRENT_USER_ID,\n        category: \"Literature Analysis\",\n        score: 95,\n        maxScore: 100,\n        completedAt: daysFromNow(-12),\n        createdAt: daysFromNow(-12),\n        updatedAt: daysFromNow(-12)\n    }\n];\n// Get today's study plan with progress\nconst STUDY_PLANS = TASKS.map((task, index)=>{\n    const session = SESSIONS.find((s)=>s.taskId === task.id);\n    const total = index === 0 ? 5 : index === 1 ? 10 : 6;\n    const completed = index === 0 ? 0 : index === 1 ? 2 : 3;\n    return {\n        id: task.id,\n        title: task.title,\n        duration: session ? \"\".concat(Math.round((session.endTime.getTime() - session.startTime.getTime()) / (1000 * 60 * 60) * 10) / 10, \" hours\") : \"Not scheduled\",\n        completed,\n        total\n    };\n});\n// Helper function to format time\nfunction formatTime(date) {\n    return date.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"2-digit\",\n        hour12: true\n    });\n}\n// Helper function to format date\nfunction formatDate(date) {\n    let format = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"full\";\n    if (format === \"full\") {\n        return date.toLocaleDateString(\"en-US\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n        });\n    } else if (format === \"short\") {\n        return date.toLocaleDateString(\"en-US\", {\n            month: \"short\",\n            day: \"numeric\"\n        });\n    } else if (format === \"month-day\") {\n        return date.toLocaleDateString(\"en-US\", {\n            month: \"long\",\n            day: \"numeric\"\n        });\n    }\n    return date.toLocaleDateString();\n}\n// Helper function to format relative time\nfunction formatRelativeTime(date) {\n    const now = new Date();\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n    if (diffInSeconds < 60) {\n        return \"\".concat(diffInSeconds, \" seconds ago\");\n    }\n    const diffInMinutes = Math.floor(diffInSeconds / 60);\n    if (diffInMinutes < 60) {\n        return \"\".concat(diffInMinutes, \" minute\").concat(diffInMinutes === 1 ? \"\" : \"s\", \" ago\");\n    }\n    const diffInHours = Math.floor(diffInMinutes / 60);\n    if (diffInHours < 24) {\n        return \"\".concat(diffInHours, \" hour\").concat(diffInHours === 1 ? \"\" : \"s\", \" ago\");\n    }\n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays < 30) {\n        return \"\".concat(diffInDays, \" day\").concat(diffInDays === 1 ? \"\" : \"s\", \" ago\");\n    }\n    const diffInMonths = Math.floor(diffInDays / 30);\n    return \"\".concat(diffInMonths, \" month\").concat(diffInMonths === 1 ? \"\" : \"s\", \" ago\");\n}\n// Weekly study data for chart\nconst WEEKLY_STUDY_DATA = [\n    {\n        day: \"Monday\",\n        hours: 2.5\n    },\n    {\n        day: \"Tuesday\",\n        hours: 1.8\n    },\n    {\n        day: \"Wednesday\",\n        hours: 3.2\n    },\n    {\n        day: \"Thursday\",\n        hours: 4.0\n    },\n    {\n        day: \"Friday\",\n        hours: 0\n    },\n    {\n        day: \"Saturday\",\n        hours: 0\n    },\n    {\n        day: \"Sunday\",\n        hours: 0\n    }\n];\n// Focus areas data\nconst FOCUS_AREAS = [\n    {\n        subject: \"Mathematics\",\n        percentage: 40\n    },\n    {\n        subject: \"Physics\",\n        percentage: 30\n    },\n    {\n        subject: \"Computer Science\",\n        percentage: 30\n    }\n];\n// Monthly progress data for interactive charts\nconst MONTHLY_PROGRESS = [\n    {\n        month: \"January\",\n        completed: 45,\n        total: 60\n    },\n    {\n        month: \"February\",\n        completed: 52,\n        total: 65\n    },\n    {\n        month: \"March\",\n        completed: 48,\n        total: 70\n    },\n    {\n        month: \"April\",\n        completed: 60,\n        total: 75\n    },\n    {\n        month: \"May\",\n        completed: 65,\n        total: 80\n    }\n];\n// Subject progress over time\nconst SUBJECT_PROGRESS = [\n    {\n        subject: \"Mathematics\",\n        data: [\n            {\n                week: \"Week 1\",\n                score: 65\n            },\n            {\n                week: \"Week 2\",\n                score: 70\n            },\n            {\n                week: \"Week 3\",\n                score: 75\n            },\n            {\n                week: \"Week 4\",\n                score: 82\n            }\n        ]\n    },\n    {\n        subject: \"Physics\",\n        data: [\n            {\n                week: \"Week 1\",\n                score: 60\n            },\n            {\n                week: \"Week 2\",\n                score: 68\n            },\n            {\n                week: \"Week 3\",\n                score: 72\n            },\n            {\n                week: \"Week 4\",\n                score: 78\n            }\n        ]\n    },\n    {\n        subject: \"Computer Science\",\n        data: [\n            {\n                week: \"Week 1\",\n                score: 75\n            },\n            {\n                week: \"Week 2\",\n                score: 80\n            },\n            {\n                week: \"Week 3\",\n                score: 85\n            },\n            {\n                week: \"Week 4\",\n                score: 90\n            }\n        ]\n    }\n];\n// Study time distribution by subject\nconst STUDY_TIME_DISTRIBUTION = [\n    {\n        subject: \"Mathematics\",\n        hours: 25,\n        percentage: 35\n    },\n    {\n        subject: \"Physics\",\n        hours: 18,\n        percentage: 25\n    },\n    {\n        subject: \"Computer Science\",\n        hours: 22,\n        percentage: 30\n    },\n    {\n        subject: \"Chemistry\",\n        hours: 5,\n        percentage: 7\n    },\n    {\n        subject: \"Biology\",\n        hours: 2,\n        percentage: 3\n    }\n];\n// Task completion rate by priority\nconst TASK_COMPLETION_RATE = [\n    {\n        priority: \"High\",\n        completed: 85,\n        total: 100\n    },\n    {\n        priority: \"Medium\",\n        completed: 70,\n        total: 100\n    },\n    {\n        priority: \"Low\",\n        completed: 50,\n        total: 100\n    }\n];\n// Study efficiency by time of day\nconst STUDY_EFFICIENCY = [\n    {\n        timeOfDay: \"Morning (6-10 AM)\",\n        efficiency: 90\n    },\n    {\n        timeOfDay: \"Midday (10 AM-2 PM)\",\n        efficiency: 75\n    },\n    {\n        timeOfDay: \"Afternoon (2-6 PM)\",\n        efficiency: 65\n    },\n    {\n        timeOfDay: \"Evening (6-10 PM)\",\n        efficiency: 80\n    },\n    {\n        timeOfDay: \"Night (10 PM-2 AM)\",\n        efficiency: 60\n    }\n];\n// Weekly goals and achievements\nconst WEEKLY_GOALS = [\n    {\n        week: \"Week 1\",\n        goals: [\n            {\n                id: \"goal1\",\n                description: \"Complete 10 math problems\",\n                achieved: true\n            },\n            {\n                id: \"goal2\",\n                description: \"Read 2 chapters of physics textbook\",\n                achieved: true\n            },\n            {\n                id: \"goal3\",\n                description: \"Finish programming assignment\",\n                achieved: false\n            }\n        ]\n    },\n    {\n        week: \"Week 2\",\n        goals: [\n            {\n                id: \"goal4\",\n                description: \"Study for calculus exam\",\n                achieved: true\n            },\n            {\n                id: \"goal5\",\n                description: \"Complete lab report\",\n                achieved: true\n            },\n            {\n                id: \"goal6\",\n                description: \"Review lecture notes\",\n                achieved: true\n            }\n        ]\n    },\n    {\n        week: \"Week 3\",\n        goals: [\n            {\n                id: \"goal7\",\n                description: \"Practice problem solving\",\n                achieved: false\n            },\n            {\n                id: \"goal8\",\n                description: \"Prepare presentation\",\n                achieved: true\n            },\n            {\n                id: \"goal9\",\n                description: \"Complete online quiz\",\n                achieved: true\n            }\n        ]\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/study-plan-data.ts\n"));

/***/ })

});